language: python

# Run jobs on container-based infrastructure, can be overridden per job

matrix:
  include:
    # Extra includes for OSX since python language is not available by default on OSX
    # First test with TD_ENGINE=rdkit
    - os: osx
      language: generic
      env: PYTHON_VER=3.6 TD_ENGINE=rdkit
    - os: osx
      language: generic
      env: PYTHON_VER=3.7 TD_ENGINE=rdkit


    - os: linux
      language: generic  # No need to set Python version since its conda
      env: PYTHON_VER=3.6 TD_ENGINE=rdkit
    - os: linux
      language: generic
      env: PYTHON_VER=3.7 TD_ENGINE=rdkit
      
    # Now with TD_ENGINE=psi4 backend
    - os: osx
      language: generic
      env: PYTHON_VER=3.6 TD_ENGINE=psi4
    - os: osx
      language: generic
      env: PYTHON_VER=3.7 TD_ENGINE=psi4


    - os: linux
      language: generic  # No need to set Python version since its conda
      env: PYTHON_VER=3.6 TD_ENGINE=psi4
    - os: linux
      language: generic
      env: PYTHON_VER=3.7 TD_ENGINE=psi4

before_install:
  # Additional info about the build
  - uname -a
  - df -h
  - ulimit -a

  # Install the Python environemt
  - source devtools/travis-ci/before_install.sh
  - python -V

install:

    # Create test environment for package
  - python devtools/scripts/create_conda_env.py -n=test -p=$PYTHON_VER devtools/conda-envs/test_${TD_ENGINE}.yaml
    # Activate the test environment
  - conda activate test_${TD_ENGINE}
    # Build and install package
  - python setup.py develop --no-deps
  
    # Build and install package
  - bash devtools/travis-ci/install-cctools-62.sh
  - python setup.py develop --no-deps

    # Print versions
  - python -c "import geometric; print(geometric.__version__)"

script:
  - pytest -v --cov=torsiondrive torsiondrive/tests/

notifications:
    email: false

after_success:
  - codecov
